services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: timerwork
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build: ./backend
    ports:
      - "0.0.0.0:8080:8080"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: timerwork
      DB_USER: admin
      DB_PASSWORD: password
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "0.0.0.0:80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
